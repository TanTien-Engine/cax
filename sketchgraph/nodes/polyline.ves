import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.node_param" for NodeParam
import "blueprint.blueprint" for Blueprint
import "blueprint.variant" for VAR_TYPE_ARRAY, Variant
import "sketchgraph.variant" for VAR_TYPE_GEOMETRY, VarGeometry
import "geometry" for Polyline as tt_Polyline

class Polyline is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "pts", VAR_TYPE_ARRAY),
		]
		this.exports = [
			Pin(this, "geo", VAR_TYPE_GEOMETRY),
		]

		this.params.add(NodeParam("closed", false))

		this.layout()
	}

	calc_value(idx)
	{
		var v_pts = Blueprint.calc_input_value(this, 0)
		if (!v_pts or v_pts.type != VAR_TYPE_ARRAY or v_pts.value.count < 2) {
			return nil
		}

		var shape = tt_Polyline.init()

		var vertices = []
		for (var p in v_pts.value) 
		{
			var pos = p.value.shape.get()
			vertices.add(pos[0])
			vertices.add(pos[1])
		}
		shape.set_vertices(vertices)

		var closed = this.query_param("closed").value
		shape.set_closed(closed)

		var geo = VarGeometry(0, shape)

		return Variant(VAR_TYPE_GEOMETRY, geo)
	}
}