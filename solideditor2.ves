import "blueprint.nodes.subgraph" for Subgraph
import "network.vertex" for Vertex
import "editor.editor" for Editor
import "tree.edit_op" for EditOP as TreeEditOP
import "solidnetwork.nodes.sketchnetwork" for Sketchnetwork
import "solidnetwork.nodes.solidgraph" for Solidgraph
import "filesystem" for Filesystem

class Solideditor2 is Editor
{
	load()
	{
		super.load()

		this.nodes_op = TreeEditOP(this.camera, this.scene_stack, this.popup_cb)
		this.editop = this.nodes_op

		this.prepare_nodes()
	}

	prepare_nodes()
	{
		this.clear_popup_nodes()

		import "solidnodes2" for SOLID_NODES2
		for (var node in SOLID_NODES2) {
			super.add_popup_node(node)
		}
	}

	load_file_imports()
	{
		return super.load_file_imports() + "
import \"network.network\" for Network
import \"tree.tree\" for Tree
"
	}
	
	subgraph_from_file(filepath)
	{
		var old_dir = Filesystem.get_asset_base_dir()
		Filesystem.set_asset_base_dir(Filesystem.get_file_dir(filepath))

		var is_network = false
		var sg = Subgraph()
		for (var item in sg.all_items) {
			if (item[0] is Vertex) {
				is_network = true
			}
		}

		var node = nil
		if (is_network) {
			node = Sketchnetwork()
		} else {
			node = Solidgraph()
		}
		node.load_from_file(this, filepath)

		if (old_dir != "") {
			Filesystem.set_asset_base_dir(old_dir)
		}

		return node
	}	
}