import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER, VAR_TYPE_NUMBER3
import "blueprint.node_helper" for NodeHelper
import "blueprint.blueprint" for Blueprint
import "partgraph.variant" for VAR_GEOM_SHAPE
import "maths.vector" for Vector3
import "partgraph" for TrimmedCurve as tt_TrimmedCurve

class TrimmedCurve is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "curve", VAR_GEOM_SHAPE),
			Pin(this, "u1",    VAR_TYPE_NUMBER),
			Pin(this, "u2",    VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "shape", VAR_GEOM_SHAPE),
		]

		this.params.add(NodeParam("u1", 0, { "region" : 3.14 }))
		this.params.add(NodeParam("u2", 3.14, { "region" : 3.14 }))

		this.layout()
	}

	calc_value(idx)
	{
		var v_curve = Blueprint.calc_input_value(this, 0)
		if (!v_curve) {
			return nil
		}
		var u1 = NodeHelper.calc_prop_value(this, "u1")
		var u2 = NodeHelper.calc_prop_value(this, "u2")

		var shape = tt_TrimmedCurve.init(v_curve.value, u1, u2)
		if (shape) {
			return Variant(VAR_GEOM_SHAPE, shape)
		} else {
			return nil
		}
	}
}