import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER
import "blueprint.node_helper" for NodeHelper
import "partgraph.variant" for VAR_TOPO_SHAPE
import "partgraph" for PrimMaker

class Cone is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "radius1", VAR_TYPE_NUMBER),
			Pin(this, "radius2", VAR_TYPE_NUMBER),
			Pin(this, "height",  VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "shape", VAR_TOPO_SHAPE),
		]

		this.params.add(NodeParam("radius1", 1.0, { "region" : 2 }))
		this.params.add(NodeParam("radius2", 0.5, { "region" : 2 }))
		this.params.add(NodeParam("height", 1.0, { "region" : 2 }))

		this.layout()
	}

	calc_value(idx)
	{
		var radius1 = NodeHelper.calc_prop_value(this, "radius1")
		var radius2 = NodeHelper.calc_prop_value(this, "radius2")
		var height = NodeHelper.calc_prop_value(this, "height")		
		var shape = PrimMaker.cone(radius1, radius2, height)
		if (shape) {
			return Variant(VAR_TOPO_SHAPE, shape)
		} else {
			return nil
		}
	}
}