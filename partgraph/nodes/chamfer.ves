import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant
import "partgraph.variant" for VAR_TYPE_TOPO
import "partgraph" for TopoAlgo

class Chamfer is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "topo", VAR_TYPE_TOPO),
		]
		this.exports = [
			Pin(this, "topo", VAR_TYPE_TOPO),
		]

		this.params.add(NodeParam("dist", 0.1, { "region" : 0.2 }))

		this.layout()
	}

	calc_value(idx)
	{
		var v_topo = Blueprint.calc_input_value(this, 0)
		if (!v_topo) {
			return nil
		}

		var dist = this.query_param("dist").value
		var ret = TopoAlgo.make_chamfer(v_topo.value, dist)
		return Variant(VAR_TYPE_TOPO, ret)
	}
}