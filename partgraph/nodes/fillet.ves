import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER
import "blueprint.node_helper" for NodeHelper
import "partgraph.variant" for VAR_TOPO_SHAPE
import "partgraph" for TopoAlgo

class Fillet is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "shape", VAR_TOPO_SHAPE),
			Pin(this, "radius", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "shape", VAR_TOPO_SHAPE),
		]

		this.params.add(NodeParam("radius", 0.05, { "region" : 2 }))

		this.layout()
	}

	calc_value(idx)
	{
		var v_shape = Blueprint.calc_input_value(this, 0)
		if (!v_shape) {
			return nil
		}

		var radius = NodeHelper.calc_prop_value(this, "radius")
		var ret = TopoAlgo.fillet(v_shape.value, radius)
		return Variant(VAR_TOPO_SHAPE, ret)
	}
}