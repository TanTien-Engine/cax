import "blueprint.node" for Node
import "blueprint.pin" for Pin
import "blueprint.blueprint" for Blueprint
import "blueprint.node_param" for NodeParam
import "blueprint.variant" for Variant, VAR_TYPE_NUMBER, VAR_TYPE_NUMBER3
import "blueprint.node_helper" for NodeHelper
import "partgraph.variant" for VAR_TOPO_SHAPE
import "partgraph" for TopoAlgo
import "maths.vector" for Vector3

class Draft is Node
{
	init()
	{
		super.init()

		this.imports = [
			Pin(this, "shape",  VAR_TOPO_SHAPE),
			Pin(this, "dir",    VAR_TYPE_NUMBER3),
			Pin(this, "angle",  VAR_TYPE_NUMBER),
			Pin(this, "length", VAR_TYPE_NUMBER),
		]
		this.exports = [
			Pin(this, "shape", VAR_TOPO_SHAPE),
		]

		this.params.add(NodeParam("dir", Vector3(0, 0, 1), { "region" : 1 }))
		this.params.add(NodeParam("angle", 0.1, { "region" : 6.28 }))
		this.params.add(NodeParam("length", 0.5))

		this.layout()
	}

	calc_value(idx)
	{
		var v_shape = Blueprint.calc_input_value(this, 0)
		if (!v_shape) {
			return nil
		}

		var dir = NodeHelper.calc_prop_value(this, "dir")
		var angle = NodeHelper.calc_prop_value(this, "angle")
		var length = NodeHelper.calc_prop_value(this, "length")		
		var ret = TopoAlgo.draft(v_shape.value, [ dir.x, dir.z, dir.y ], angle, length)
		return Variant(VAR_TOPO_SHAPE, ret)
	}
}